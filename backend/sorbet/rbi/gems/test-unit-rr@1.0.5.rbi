# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `test-unit-rr` gem.
# Please instead update this file by running `bin/tapioca gem test-unit-rr`.

# source://test-unit-rr//lib/test/unit/rr/version.rb#17
module Test; end

# source://test-unit-rr//lib/test/unit/rr/version.rb#18
module Test::Unit; end

# source://test-unit-rr//lib/test/unit/rr/version.rb#19
module Test::Unit::RR; end

# source://test-unit-rr//lib/test/unit/rr.rb#26
module Test::Unit::RR::Adapter
  include ::RR::DoubleDefinitions::Strategies::StrategyMethods
  include ::RR::DSL

  # source://test-unit-rr//lib/test/unit/rr.rb#64
  def assert_received(subject, &block); end

  # Verify double declarations by RR in block. It is useful to
  # clear your double declarations scope.
  #
  # @example Success case
  #   assert_rr do
  #   subject = Object.new
  #   assert_rr do
  #   mock(subject).should_be_called
  #   subject.should_be_called
  #   end
  #   end
  # @example Failure case
  #   assert_rr do
  #   subject = Object.new
  #   assert_rr do
  #   mock(subject).should_be_called
  #   # subject.should_be_called
  #   end
  #   end
  # @yield declares your doubles and uses the doubles in the block. The
  #   doubles are verified before and after the block is called.
  #
  # source://test-unit-rr//lib/test/unit/rr.rb#92
  def assert_rr; end

  class << self
    # @private
    #
    # source://test-unit-rr//lib/test/unit/rr.rb#34
    def included(mod); end

    # source://test-unit-rr//lib/test/unit/rr.rb#58
    def reset; end
  end
end

# source://test-unit-rr//lib/test/unit/rr/version.rb#20
Test::Unit::RR::VERSION = T.let(T.unsafe(nil), String)

# source://test-unit-rr//lib/test/unit/rr.rb#109
class Test::Unit::TestCase
  include ::RR::DoubleDefinitions::Strategies::StrategyMethods
  include ::RR::DSL
  include ::Test::Unit::RR::Adapter

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#528
  def initialize(test_method_name); end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#794
  def ==(other); end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#843
  def add_pass; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#534
  def assign_test_data(label, data); end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#691
  def cleanup; end

  # source://test-unit-rr//lib/test/unit/rr.rb#42
  def cleanup_rr; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#756
  def data; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#750
  def data_label; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#739
  def default_test; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#784
  def description; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#807
  def elapsed_time; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#812
  def interrupted?; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#771
  def local_name; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#524
  def method_name; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#762
  def name; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#819
  def passed?; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#830
  def problem_occurred; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#555
  def run(result); end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#644
  def setup; end

  # source://test-unit-rr//lib/test/unit/rr.rb#37
  def setup_rr; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#743
  def size; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#802
  def start_time; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#736
  def teardown; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#789
  def to_s; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#539
  def valid?; end

  private

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#887
  def add_assertion; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#848
  def current_result; end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#875
  def handle_exception(exception); end

  # source://test-unit/3.5.3/lib/test/unit/testcase.rb#852
  def run_test; end

  class << self
    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#173
    def added_method_names; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#349
    def description(value, target = T.unsafe(nil)); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#441
    def find_locations(query); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#133
    def include(*modules, &block); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#128
    def inherited(sub_class); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#144
    def method_added(name); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#380
    def ractor(options = T.unsafe(nil)); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#259
    def shutdown; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#221
    def startup; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#421
    def sub_test_case(name, &block); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#180
    def suite; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#312
    def test(*test_description_or_targets, &block); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#436
    def test_defined?(query); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#266
    def test_order; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#286
    def test_order=(order); end

    private

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#482
    def add_method_location(location); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#477
    def method_locations; end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#513
    def sub_test_case_class(name); end

    # source://test-unit/3.5.3/lib/test/unit/testcase.rb#489
    def target_method_locations(path); end
  end
end

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#125
Test::Unit::TestCase::AVAILABLE_ORDERS = T.let(T.unsafe(nil), Array)

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#124
Test::Unit::TestCase::DESCENDANTS = T.let(T.unsafe(nil), Array)

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#120
Test::Unit::TestCase::FINISHED = T.let(T.unsafe(nil), String)

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#122
Test::Unit::TestCase::FINISHED_OBJECT = T.let(T.unsafe(nil), String)

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#119
Test::Unit::TestCase::STARTED = T.let(T.unsafe(nil), String)

# source://test-unit/3.5.3/lib/test/unit/testcase.rb#121
Test::Unit::TestCase::STARTED_OBJECT = T.let(T.unsafe(nil), String)
